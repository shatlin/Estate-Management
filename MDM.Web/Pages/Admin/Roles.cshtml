@page
@model MDM.Pages.Client.RoleModel
@using MDM.Models;
@using MDM.Helper;
@{
    ViewData["Role"] = "Index";
    ViewData["Page"] = "Index";
    bool isAuthorizedForDelete = AuthorizationService.AuthorizeAsync(User, MMPolicies.AllowSetupDelete).Result.Succeeded;
    bool isAuthorizedForUpdate = AuthorizationService.AuthorizeAsync(User, MMPolicies.AllowSetupUpdate).Result.Succeeded;
}


<!-- #region AddEditModalSection -->

<div class="modal" style="min-width:500px" id="AddEditModal" tabindex="-1" role="dialog" aria-labelledby="AddEditModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <form method="post" id="AddEditForm" onsubmit="return Save(this)">
                <div class="modal-header">
                    <h5 class="modal-Role" id="AddEditModalLabel">Add New Role</h5>
                    <button type="button" class="btn btn-info close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="reg-container row">
                        <div class="col-12">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" id="id" asp-for="Role.Id" value="" />

                            <div class="form-group mb-4">
                                <label asp-for=Role.Name class="control-label"></label>
                                <input asp-for=Role.Name type="text" class="form-control form-input" placeholder="Name of Role" id="name">
                                <span asp-validation-for=Role.Name class="text-danger"></span>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row w-100">
                        <div class="col-6">
                            &nbsp;
                        </div>
                        <div class="col-3 text-right">
                            <input type="submit" value="Add" class="form-btn" id="modal-create-edit" />
                        </div>
                        <div class="col-2  text-right ">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- #endregion AddEditModalSection-->
<!-- #region DeleteModalRegion -->

<div class="modal" style="min-width:500px" id="DeleteModal" tabindex="-1" role="dialog" aria-labelledby="DeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered   modal-lg" role="document">
        <div class="modal-content">
            <form method="post" id="DeleteForm" onsubmit="return Delete()">

                <div class="modal-header">
                    <h5 class="modal-title" id="DeleteModalLabel">Are you sure you want to delete?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>


                <div class="modal-body">
                    <div class="reg-container row">
                        <div class="col-12">
                            <input type="hidden" id="idToDelete" />
                            <dl class="row">
                                <dt class="col-sm-2">

                                    <label asp-for=Role.Name class="control-label"></label>
                                </dt>
                                <dd class="col-sm-10">
                                    <label id="NameofRecordToDelete"></label>
                                </dd>
                                <dd class="col-sm-10">
                                    <label id="DescriptionofRecordToDelete"></label>
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row w-100">
                        <div class="col-6">
                            &nbsp;
                        </div>
                        <div class="col-3 text-right">
                            <input type="submit" value="Delete" class="btn btn-danger" />
                        </div>
                        <div class="col-2  text-right ">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- #endregion DeleteModalRegion -->
<!-- #region ToholdGrid -->

<partial name="_CRUDHeader" , model='new Header{name="Manage Roles", description="Here you can manage Roles of your application"}'>

    <div class="reg-container row">
        <!--  Personal -->
        <div class="col-12">
            <div class="card shadow-sm">
                <partial name="_CardHeaderPartial" , model='new Header{name="Roles"}'>
                    <div class="card-body reg-card-body">
                        <div class="row">
                            <div class="col-3 text-left pb-3">
                                <input value="Add New" class="btn btn-success btn-sm" data-toggle="modal" data-target="#AddEditModal" onclick="SetUpPopupToAddRecord()">
                            </div>
                            <div class="col-9 text-left pb-3">
                            </div>
                        </div>
                        <table id="list" class="table table-sm" style="width:100%">
                        </table>
                    </div>
            </div>
        </div>
    </div>


    <!-- #endregion ToholdGrid-->
    @section scripts {
        <script>

            var dataTable;

            $(document).ready(function () {
                $('#list').show();
                dataTable = $('#list').DataTable({
                    "pagingType": "full_numbers",

                    pageLength: 10,
                    lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                    ajax: {
                        url: '?handler=List',
                        dataSrc: ''
                    },
                    //"initComplete": function (settings, json) {
                    //    console.log(json);
                    //},
                    "columns": [
                        { title: "Name", data: "name", "autoWidth": true },
                        {
                            title: "Action",
                            data: "id",
                            "render": function (data, type, row, meta) {
                            var actions = '';

                             if (@Json.Serialize(isAuthorizedForUpdate)) {
                                 actions += '<a class="btn btn-info btn-round btn-icon btn-icon-mini btn-neutral" href="#" data-toggle="modal" data-target="#AddEditModal" onClick="SetUpPopupToEditRecord(' + row.id + ')" ><i class="nc-icon nc-ruler-pencil">  </i></a>'
                             }
                             if (@Json.Serialize(isAuthorizedForDelete)) {
                                 actions += '<a  class="btn btn-danger btn-round btn-icon btn-icon-mini btn-neutral" href="#" data-toggle="modal"  data-target="#DeleteModal" onClick="SetUpPopupToDeleteRecord(' + '\'' + row.id + ';' + row.name + ';' + '\'' + ')" ><i class="nc-icon nc-simple-remove"></i></a>'
                             }
                            return actions;
                            },
                            orderable: false,
                            width: "150px"
                        }

                    ]
                });
                $(".dataTables_filter").hide();
            });

            function SetUpPopupToAddRecord() {
                $('#AddEditModalLabel').text("Add New Role");
                $('#modal-create-edit').val("Add")
                $('#id').val(0);
                $('#name').val("");
            }

            function SetUpPopupToEditRecord(id) {
                console.log('inside');
                $('#AddEditModalLabel').text("Edit Role")
                $('#modal-create-edit').val("Update")
                $.ajax({
                    url: '?handler=SelectedRecord&id=' + id,
                    type: "GET",
                    dataType: 'json',
                    success: function (data) {
                        console.log(data);
                        $('#id').val(data.id);
                        $('#name').val(data.name);
                    }
                });
            }

            function SetUpPopupToDeleteRecord(data) {
                var dataarray = data.split(";")
                $('#idToDelete').val(dataarray[0]);
                $('#NameofRecordToDelete').text(dataarray[1]);
            }

            $('#AddEditModal').on('shown.bs.modal', function () {
                $(this).find('.modal-body').css({
                    width: $('#reg-container').width,
                    height: $('#reg-container').height
                });
                setTimeout(function () {
                    $('#name').focus();
                }, 400);
            })

            function Delete() {
                var id = $('#idToDelete').val();
                $.ajax({
                    url: '?handler=Delete&id=' + id,
                    type: "GET",
                    dataType: 'json',
                    success: function (data) {
                        $('#DeleteModal').modal('hide');
                        dataTable.ajax.reload();
                        if (data.success) {
                            MMNotify(data.message, "success");
                        }
                        else {
                            MMNotify(data.message, "danger");
                        }
                    }
                });
                return false;
            }

            function Save(form) {
                if ($(form).valid()) {
                    $.post({
                        url: '?handler=Save',
                        dataType: 'json',
                        data: $(form).serialize(),
                    })
                        .done(function (data) {
                            console.log(data);
                            if (data.success) {
                                $('#AddEditModal').modal('hide');
                                $('#id').val("");
                                $('#name').val("");
                                if (data.success) {
                                    MMNotify(data.message, "success");
                                }
                                else {
                                    MMNotify(data.message, "danger");
                                }
                                dataTable.ajax.reload();
                            }
                        })
                        .fail(function (error) {
                            MMNotify("Unknown error", "danger");
                        });
                }
                else {
                    MMNotify("Form Not valid error", "danger");
                }

                return false;
            }

        </script>
    }

