using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Identity.UI.Services;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using MDM.Models;
using MDM.Helper;
using System;
using System.Data;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Security.Claims;
using System.Threading;
using System.Threading.Tasks;
using MDM.Services;

namespace MDM.Pages
{
    [AllowAnonymous]
    public class StartModel : PageModel
    {

        private readonly IHttpContextAccessor _httpContextAccessor;
        private readonly RoleManager<ApplicationRole> _roleManager;
        private UserManager<ApplicationUser> _userManager;
        private readonly DB _db;
        private readonly ILogger<StartModel> _logger;
        public StartModel(RoleManager<ApplicationRole> roleManager, UserManager<ApplicationUser> userManager,
            DB context, ILogger<StartModel> logger, IHttpContextAccessor httpContextAccessor)
        {

            _roleManager = roleManager;
            _userManager = userManager;
            _db = context;
            _logger = logger;
            _httpContextAccessor = httpContextAccessor;
        }

        public PageResult OnGet()
        {
            return Page();
        }

        #region optimized
        public async Task<IActionResult> SetUpRoles()
        {
            using (DB db = new DB(_httpContextAccessor))
            {

                var role = new ApplicationRole(MDMRoles.SuperUser);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.SuperUser, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Admin, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Trustee, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Owner, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Tenant, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.EstateManager, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.ManagingAgent, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.SecurityVendor, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.GardenVendor, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.ServiceProvider, MDMClaimValues.Access));

                role = new ApplicationRole(MDMRoles.Admin);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Admin, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Trustee, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Owner, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Tenant, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.EstateManager, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.ManagingAgent, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.SecurityVendor, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.GardenVendor, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.ServiceProvider, MDMClaimValues.Access));

                role = new ApplicationRole(MDMRoles.Trustee);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Admin, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Trustee, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Owner, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.EstateManager, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.ManagingAgent, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.SecurityVendor, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.GardenVendor, MDMClaimValues.Access));
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.ServiceProvider, MDMClaimValues.Access));

                role = new ApplicationRole(MDMRoles.Owner);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Owner, MDMClaimValues.Access));

                role = new ApplicationRole(MDMRoles.Tenant);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.Tenant, MDMClaimValues.Access));

                role = new ApplicationRole(MDMRoles.EstateManager);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.EstateManager, MDMClaimValues.Access));

                role = new ApplicationRole(MDMRoles.ManagingAgent);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.ManagingAgent, MDMClaimValues.Access));


                role = new ApplicationRole(MDMRoles.SecurityVendor);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.SecurityVendor, MDMClaimValues.Access));

                role = new ApplicationRole(MDMRoles.GardenVendor);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.GardenVendor, MDMClaimValues.Access));

                role = new ApplicationRole(MDMRoles.ServiceProvider);
                await _roleManager.CreateAsync(role);
                await _roleManager.AddClaimAsync(role, new Claim(MDMClaimTypes.ServiceProvider, MDMClaimValues.Access));
            }
            return new JsonResult(new { success = false, message = "Error. Please check values entered" });
        }

        public async Task<IActionResult> CreateUsers()
        {
         
                ApplicationUser AppUser=null;

                AppUser = new ApplicationUser { Email = "unit1@miledownemanor.co.za", UserName = "unit1@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; var result = await _userManager.CreateAsync(AppUser, "password"); 
                if (result.Succeeded) 
                    { 
                    await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); 
                    }
                AppUser = new ApplicationUser { Email = "unit2@miledownemanor.co.za", UserName = "unit2@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit3@miledownemanor.co.za", UserName = "unit3@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit4@miledownemanor.co.za", UserName = "unit4@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit5@miledownemanor.co.za", UserName = "unit5@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit6@miledownemanor.co.za", UserName = "unit6@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit7@miledownemanor.co.za", UserName = "unit7@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit8@miledownemanor.co.za", UserName = "unit8@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit9@miledownemanor.co.za", UserName = "unit9@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit10@miledownemanor.co.za", UserName = "unit10@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit11@miledownemanor.co.za", UserName = "unit11@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit12@miledownemanor.co.za", UserName = "unit12@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit13@miledownemanor.co.za", UserName = "unit13@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit14@miledownemanor.co.za", UserName = "unit14@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit15@miledownemanor.co.za", UserName = "unit15@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit16@miledownemanor.co.za", UserName = "unit16@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit17@miledownemanor.co.za", UserName = "unit17@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit18@miledownemanor.co.za", UserName = "unit18@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit19@miledownemanor.co.za", UserName = "unit19@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit20@miledownemanor.co.za", UserName = "unit20@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit21@miledownemanor.co.za", UserName = "unit21@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit22@miledownemanor.co.za", UserName = "unit22@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit23@miledownemanor.co.za", UserName = "unit23@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit24@miledownemanor.co.za", UserName = "unit24@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit25@miledownemanor.co.za", UserName = "unit25@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit26@miledownemanor.co.za", UserName = "unit26@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit27@miledownemanor.co.za", UserName = "unit27@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit28@miledownemanor.co.za", UserName = "unit28@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit29@miledownemanor.co.za", UserName = "unit29@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit30@miledownemanor.co.za", UserName = "unit30@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit31@miledownemanor.co.za", UserName = "unit31@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit32@miledownemanor.co.za", UserName = "unit32@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit33@miledownemanor.co.za", UserName = "unit33@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit34@miledownemanor.co.za", UserName = "unit34@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit35@miledownemanor.co.za", UserName = "unit35@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit36@miledownemanor.co.za", UserName = "unit36@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit37@miledownemanor.co.za", UserName = "unit37@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit38@miledownemanor.co.za", UserName = "unit38@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit39@miledownemanor.co.za", UserName = "unit39@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit40@miledownemanor.co.za", UserName = "unit40@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit41@miledownemanor.co.za", UserName = "unit41@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit42@miledownemanor.co.za", UserName = "unit42@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit43@miledownemanor.co.za", UserName = "unit43@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit44@miledownemanor.co.za", UserName = "unit44@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit45@miledownemanor.co.za", UserName = "unit45@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit46@miledownemanor.co.za", UserName = "unit46@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit47@miledownemanor.co.za", UserName = "unit47@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit48@miledownemanor.co.za", UserName = "unit48@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit49@miledownemanor.co.za", UserName = "unit49@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit50@miledownemanor.co.za", UserName = "unit50@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit51@miledownemanor.co.za", UserName = "unit51@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit52@miledownemanor.co.za", UserName = "unit52@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit53@miledownemanor.co.za", UserName = "unit53@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit54@miledownemanor.co.za", UserName = "unit54@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit55@miledownemanor.co.za", UserName = "unit55@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit56@miledownemanor.co.za", UserName = "unit56@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit57@miledownemanor.co.za", UserName = "unit57@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit58@miledownemanor.co.za", UserName = "unit58@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit59@miledownemanor.co.za", UserName = "unit59@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit60@miledownemanor.co.za", UserName = "unit60@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit61@miledownemanor.co.za", UserName = "unit61@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit62@miledownemanor.co.za", UserName = "unit62@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit63@miledownemanor.co.za", UserName = "unit63@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit64@miledownemanor.co.za", UserName = "unit64@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit65@miledownemanor.co.za", UserName = "unit65@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit66@miledownemanor.co.za", UserName = "unit66@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit67@miledownemanor.co.za", UserName = "unit67@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit68@miledownemanor.co.za", UserName = "unit68@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit69@miledownemanor.co.za", UserName = "unit69@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit70@miledownemanor.co.za", UserName = "unit70@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit71@miledownemanor.co.za", UserName = "unit71@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit72@miledownemanor.co.za", UserName = "unit72@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit73@miledownemanor.co.za", UserName = "unit73@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit74@miledownemanor.co.za", UserName = "unit74@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit75@miledownemanor.co.za", UserName = "unit75@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit76@miledownemanor.co.za", UserName = "unit76@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit77@miledownemanor.co.za", UserName = "unit77@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit78@miledownemanor.co.za", UserName = "unit78@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit79@miledownemanor.co.za", UserName = "unit79@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit80@miledownemanor.co.za", UserName = "unit80@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit81@miledownemanor.co.za", UserName = "unit81@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit82@miledownemanor.co.za", UserName = "unit82@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit83@miledownemanor.co.za", UserName = "unit83@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit84@miledownemanor.co.za", UserName = "unit84@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit85@miledownemanor.co.za", UserName = "unit85@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit86@miledownemanor.co.za", UserName = "unit86@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit87@miledownemanor.co.za", UserName = "unit87@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit88@miledownemanor.co.za", UserName = "unit88@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit89@miledownemanor.co.za", UserName = "unit89@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit90@miledownemanor.co.za", UserName = "unit90@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit91@miledownemanor.co.za", UserName = "unit91@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit92@miledownemanor.co.za", UserName = "unit92@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit93@miledownemanor.co.za", UserName = "unit93@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit94@miledownemanor.co.za", UserName = "unit94@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit95@miledownemanor.co.za", UserName = "unit95@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit96@miledownemanor.co.za", UserName = "unit96@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit97@miledownemanor.co.za", UserName = "unit97@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit98@miledownemanor.co.za", UserName = "unit98@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit99@miledownemanor.co.za", UserName = "unit99@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit100@miledownemanor.co.za", UserName = "unit100@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit101@miledownemanor.co.za", UserName = "unit101@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit102@miledownemanor.co.za", UserName = "unit102@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit103@miledownemanor.co.za", UserName = "unit103@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit104@miledownemanor.co.za", UserName = "unit104@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit105@miledownemanor.co.za", UserName = "unit105@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit106@miledownemanor.co.za", UserName = "unit106@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit107@miledownemanor.co.za", UserName = "unit107@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit108@miledownemanor.co.za", UserName = "unit108@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit109@miledownemanor.co.za", UserName = "unit109@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit110@miledownemanor.co.za", UserName = "unit110@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit111@miledownemanor.co.za", UserName = "unit111@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit112@miledownemanor.co.za", UserName = "unit112@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit113@miledownemanor.co.za", UserName = "unit113@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit114@miledownemanor.co.za", UserName = "unit114@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit115@miledownemanor.co.za", UserName = "unit115@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit116@miledownemanor.co.za", UserName = "unit116@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit117@miledownemanor.co.za", UserName = "unit117@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit118@miledownemanor.co.za", UserName = "unit118@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit119@miledownemanor.co.za", UserName = "unit119@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit120@miledownemanor.co.za", UserName = "unit120@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit121@miledownemanor.co.za", UserName = "unit121@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit122@miledownemanor.co.za", UserName = "unit122@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit123@miledownemanor.co.za", UserName = "unit123@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit124@miledownemanor.co.za", UserName = "unit124@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit125@miledownemanor.co.za", UserName = "unit125@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit126@miledownemanor.co.za", UserName = "unit126@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit127@miledownemanor.co.za", UserName = "unit127@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit128@miledownemanor.co.za", UserName = "unit128@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit129@miledownemanor.co.za", UserName = "unit129@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit130@miledownemanor.co.za", UserName = "unit130@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit131@miledownemanor.co.za", UserName = "unit131@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit132@miledownemanor.co.za", UserName = "unit132@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit133@miledownemanor.co.za", UserName = "unit133@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit134@miledownemanor.co.za", UserName = "unit134@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit135@miledownemanor.co.za", UserName = "unit135@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit136@miledownemanor.co.za", UserName = "unit136@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit137@miledownemanor.co.za", UserName = "unit137@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit138@miledownemanor.co.za", UserName = "unit138@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit139@miledownemanor.co.za", UserName = "unit139@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit140@miledownemanor.co.za", UserName = "unit140@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit141@miledownemanor.co.za", UserName = "unit141@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit142@miledownemanor.co.za", UserName = "unit142@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit143@miledownemanor.co.za", UserName = "unit143@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit144@miledownemanor.co.za", UserName = "unit144@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit145@miledownemanor.co.za", UserName = "unit145@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit146@miledownemanor.co.za", UserName = "unit146@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit147@miledownemanor.co.za", UserName = "unit147@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit148@miledownemanor.co.za", UserName = "unit148@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit149@miledownemanor.co.za", UserName = "unit149@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit150@miledownemanor.co.za", UserName = "unit150@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit151@miledownemanor.co.za", UserName = "unit151@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit152@miledownemanor.co.za", UserName = "unit152@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit153@miledownemanor.co.za", UserName = "unit153@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit154@miledownemanor.co.za", UserName = "unit154@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit155@miledownemanor.co.za", UserName = "unit155@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit156@miledownemanor.co.za", UserName = "unit156@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit157@miledownemanor.co.za", UserName = "unit157@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit158@miledownemanor.co.za", UserName = "unit158@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit159@miledownemanor.co.za", UserName = "unit159@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit160@miledownemanor.co.za", UserName = "unit160@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit161@miledownemanor.co.za", UserName = "unit161@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit162@miledownemanor.co.za", UserName = "unit162@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit163@miledownemanor.co.za", UserName = "unit163@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit164@miledownemanor.co.za", UserName = "unit164@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit165@miledownemanor.co.za", UserName = "unit165@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit166@miledownemanor.co.za", UserName = "unit166@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit167@miledownemanor.co.za", UserName = "unit167@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit168@miledownemanor.co.za", UserName = "unit168@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit169@miledownemanor.co.za", UserName = "unit169@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit170@miledownemanor.co.za", UserName = "unit170@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit171@miledownemanor.co.za", UserName = "unit171@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit172@miledownemanor.co.za", UserName = "unit172@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit173@miledownemanor.co.za", UserName = "unit173@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit174@miledownemanor.co.za", UserName = "unit174@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit175@miledownemanor.co.za", UserName = "unit175@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit176@miledownemanor.co.za", UserName = "unit176@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit177@miledownemanor.co.za", UserName = "unit177@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit178@miledownemanor.co.za", UserName = "unit178@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit179@miledownemanor.co.za", UserName = "unit179@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit180@miledownemanor.co.za", UserName = "unit180@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit181@miledownemanor.co.za", UserName = "unit181@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit182@miledownemanor.co.za", UserName = "unit182@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit183@miledownemanor.co.za", UserName = "unit183@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit184@miledownemanor.co.za", UserName = "unit184@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit185@miledownemanor.co.za", UserName = "unit185@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit186@miledownemanor.co.za", UserName = "unit186@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit187@miledownemanor.co.za", UserName = "unit187@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit188@miledownemanor.co.za", UserName = "unit188@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit189@miledownemanor.co.za", UserName = "unit189@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit190@miledownemanor.co.za", UserName = "unit190@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit191@miledownemanor.co.za", UserName = "unit191@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit192@miledownemanor.co.za", UserName = "unit192@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit193@miledownemanor.co.za", UserName = "unit193@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit194@miledownemanor.co.za", UserName = "unit194@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit195@miledownemanor.co.za", UserName = "unit195@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit196@miledownemanor.co.za", UserName = "unit196@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit197@miledownemanor.co.za", UserName = "unit197@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit198@miledownemanor.co.za", UserName = "unit198@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit199@miledownemanor.co.za", UserName = "unit199@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit200@miledownemanor.co.za", UserName = "unit200@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit201@miledownemanor.co.za", UserName = "unit201@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit202@miledownemanor.co.za", UserName = "unit202@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit203@miledownemanor.co.za", UserName = "unit203@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit204@miledownemanor.co.za", UserName = "unit204@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit205@miledownemanor.co.za", UserName = "unit205@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit206@miledownemanor.co.za", UserName = "unit206@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit207@miledownemanor.co.za", UserName = "unit207@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit208@miledownemanor.co.za", UserName = "unit208@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit209@miledownemanor.co.za", UserName = "unit209@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit210@miledownemanor.co.za", UserName = "unit210@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit211@miledownemanor.co.za", UserName = "unit211@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit212@miledownemanor.co.za", UserName = "unit212@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit213@miledownemanor.co.za", UserName = "unit213@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit214@miledownemanor.co.za", UserName = "unit214@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit215@miledownemanor.co.za", UserName = "unit215@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit216@miledownemanor.co.za", UserName = "unit216@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit217@miledownemanor.co.za", UserName = "unit217@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit218@miledownemanor.co.za", UserName = "unit218@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit219@miledownemanor.co.za", UserName = "unit219@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit220@miledownemanor.co.za", UserName = "unit220@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit221@miledownemanor.co.za", UserName = "unit221@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit222@miledownemanor.co.za", UserName = "unit222@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit223@miledownemanor.co.za", UserName = "unit223@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit224@miledownemanor.co.za", UserName = "unit224@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit225@miledownemanor.co.za", UserName = "unit225@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit226@miledownemanor.co.za", UserName = "unit226@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit227@miledownemanor.co.za", UserName = "unit227@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit228@miledownemanor.co.za", UserName = "unit228@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit229@miledownemanor.co.za", UserName = "unit229@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit230@miledownemanor.co.za", UserName = "unit230@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit231@miledownemanor.co.za", UserName = "unit231@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit232@miledownemanor.co.za", UserName = "unit232@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit233@miledownemanor.co.za", UserName = "unit233@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit234@miledownemanor.co.za", UserName = "unit234@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit235@miledownemanor.co.za", UserName = "unit235@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit236@miledownemanor.co.za", UserName = "unit236@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit237@miledownemanor.co.za", UserName = "unit237@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit238@miledownemanor.co.za", UserName = "unit238@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit239@miledownemanor.co.za", UserName = "unit239@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit240@miledownemanor.co.za", UserName = "unit240@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit241@miledownemanor.co.za", UserName = "unit241@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit242@miledownemanor.co.za", UserName = "unit242@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit243@miledownemanor.co.za", UserName = "unit243@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit244@miledownemanor.co.za", UserName = "unit244@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit245@miledownemanor.co.za", UserName = "unit245@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit246@miledownemanor.co.za", UserName = "unit246@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit247@miledownemanor.co.za", UserName = "unit247@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit248@miledownemanor.co.za", UserName = "unit248@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit249@miledownemanor.co.za", UserName = "unit249@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit250@miledownemanor.co.za", UserName = "unit250@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit251@miledownemanor.co.za", UserName = "unit251@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit252@miledownemanor.co.za", UserName = "unit252@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit253@miledownemanor.co.za", UserName = "unit253@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit254@miledownemanor.co.za", UserName = "unit254@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit255@miledownemanor.co.za", UserName = "unit255@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit256@miledownemanor.co.za", UserName = "unit256@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit257@miledownemanor.co.za", UserName = "unit257@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit258@miledownemanor.co.za", UserName = "unit258@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit259@miledownemanor.co.za", UserName = "unit259@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit260@miledownemanor.co.za", UserName = "unit260@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit261@miledownemanor.co.za", UserName = "unit261@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit262@miledownemanor.co.za", UserName = "unit262@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit263@miledownemanor.co.za", UserName = "unit263@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit264@miledownemanor.co.za", UserName = "unit264@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit265@miledownemanor.co.za", UserName = "unit265@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit266@miledownemanor.co.za", UserName = "unit266@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit267@miledownemanor.co.za", UserName = "unit267@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit268@miledownemanor.co.za", UserName = "unit268@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit269@miledownemanor.co.za", UserName = "unit269@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit270@miledownemanor.co.za", UserName = "unit270@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit271@miledownemanor.co.za", UserName = "unit271@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit272@miledownemanor.co.za", UserName = "unit272@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit273@miledownemanor.co.za", UserName = "unit273@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit274@miledownemanor.co.za", UserName = "unit274@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit275@miledownemanor.co.za", UserName = "unit275@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit276@miledownemanor.co.za", UserName = "unit276@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit277@miledownemanor.co.za", UserName = "unit277@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit278@miledownemanor.co.za", UserName = "unit278@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit279@miledownemanor.co.za", UserName = "unit279@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit280@miledownemanor.co.za", UserName = "unit280@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit281@miledownemanor.co.za", UserName = "unit281@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit282@miledownemanor.co.za", UserName = "unit282@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit283@miledownemanor.co.za", UserName = "unit283@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit284@miledownemanor.co.za", UserName = "unit284@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit285@miledownemanor.co.za", UserName = "unit285@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit286@miledownemanor.co.za", UserName = "unit286@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit287@miledownemanor.co.za", UserName = "unit287@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit288@miledownemanor.co.za", UserName = "unit288@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit289@miledownemanor.co.za", UserName = "unit289@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit290@miledownemanor.co.za", UserName = "unit290@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit291@miledownemanor.co.za", UserName = "unit291@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit292@miledownemanor.co.za", UserName = "unit292@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit293@miledownemanor.co.za", UserName = "unit293@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit294@miledownemanor.co.za", UserName = "unit294@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit295@miledownemanor.co.za", UserName = "unit295@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit296@miledownemanor.co.za", UserName = "unit296@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit297@miledownemanor.co.za", UserName = "unit297@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit298@miledownemanor.co.za", UserName = "unit298@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit299@miledownemanor.co.za", UserName = "unit299@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit300@miledownemanor.co.za", UserName = "unit300@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit301@miledownemanor.co.za", UserName = "unit301@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit302@miledownemanor.co.za", UserName = "unit302@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit303@miledownemanor.co.za", UserName = "unit303@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit304@miledownemanor.co.za", UserName = "unit304@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit305@miledownemanor.co.za", UserName = "unit305@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit306@miledownemanor.co.za", UserName = "unit306@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit307@miledownemanor.co.za", UserName = "unit307@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit308@miledownemanor.co.za", UserName = "unit308@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit309@miledownemanor.co.za", UserName = "unit309@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit310@miledownemanor.co.za", UserName = "unit310@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit311@miledownemanor.co.za", UserName = "unit311@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit312@miledownemanor.co.za", UserName = "unit312@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit313@miledownemanor.co.za", UserName = "unit313@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit314@miledownemanor.co.za", UserName = "unit314@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit315@miledownemanor.co.za", UserName = "unit315@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit316@miledownemanor.co.za", UserName = "unit316@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit317@miledownemanor.co.za", UserName = "unit317@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit318@miledownemanor.co.za", UserName = "unit318@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit319@miledownemanor.co.za", UserName = "unit319@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit320@miledownemanor.co.za", UserName = "unit320@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit321@miledownemanor.co.za", UserName = "unit321@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit322@miledownemanor.co.za", UserName = "unit322@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit323@miledownemanor.co.za", UserName = "unit323@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit324@miledownemanor.co.za", UserName = "unit324@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit325@miledownemanor.co.za", UserName = "unit325@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit326@miledownemanor.co.za", UserName = "unit326@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit327@miledownemanor.co.za", UserName = "unit327@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit328@miledownemanor.co.za", UserName = "unit328@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit329@miledownemanor.co.za", UserName = "unit329@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit330@miledownemanor.co.za", UserName = "unit330@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit331@miledownemanor.co.za", UserName = "unit331@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit332@miledownemanor.co.za", UserName = "unit332@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit333@miledownemanor.co.za", UserName = "unit333@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit334@miledownemanor.co.za", UserName = "unit334@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit335@miledownemanor.co.za", UserName = "unit335@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit336@miledownemanor.co.za", UserName = "unit336@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit337@miledownemanor.co.za", UserName = "unit337@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit338@miledownemanor.co.za", UserName = "unit338@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit339@miledownemanor.co.za", UserName = "unit339@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit340@miledownemanor.co.za", UserName = "unit340@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit341@miledownemanor.co.za", UserName = "unit341@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit342@miledownemanor.co.za", UserName = "unit342@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit343@miledownemanor.co.za", UserName = "unit343@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit344@miledownemanor.co.za", UserName = "unit344@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit345@miledownemanor.co.za", UserName = "unit345@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit346@miledownemanor.co.za", UserName = "unit346@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit347@miledownemanor.co.za", UserName = "unit347@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit348@miledownemanor.co.za", UserName = "unit348@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit349@miledownemanor.co.za", UserName = "unit349@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit350@miledownemanor.co.za", UserName = "unit350@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit351@miledownemanor.co.za", UserName = "unit351@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit352@miledownemanor.co.za", UserName = "unit352@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit353@miledownemanor.co.za", UserName = "unit353@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit354@miledownemanor.co.za", UserName = "unit354@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit355@miledownemanor.co.za", UserName = "unit355@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit356@miledownemanor.co.za", UserName = "unit356@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit357@miledownemanor.co.za", UserName = "unit357@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit358@miledownemanor.co.za", UserName = "unit358@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit359@miledownemanor.co.za", UserName = "unit359@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit360@miledownemanor.co.za", UserName = "unit360@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit361@miledownemanor.co.za", UserName = "unit361@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit362@miledownemanor.co.za", UserName = "unit362@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit363@miledownemanor.co.za", UserName = "unit363@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit364@miledownemanor.co.za", UserName = "unit364@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit365@miledownemanor.co.za", UserName = "unit365@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit366@miledownemanor.co.za", UserName = "unit366@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit367@miledownemanor.co.za", UserName = "unit367@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit368@miledownemanor.co.za", UserName = "unit368@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit369@miledownemanor.co.za", UserName = "unit369@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit370@miledownemanor.co.za", UserName = "unit370@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit371@miledownemanor.co.za", UserName = "unit371@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit372@miledownemanor.co.za", UserName = "unit372@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit373@miledownemanor.co.za", UserName = "unit373@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit374@miledownemanor.co.za", UserName = "unit374@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit375@miledownemanor.co.za", UserName = "unit375@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit376@miledownemanor.co.za", UserName = "unit376@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit377@miledownemanor.co.za", UserName = "unit377@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit378@miledownemanor.co.za", UserName = "unit378@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit379@miledownemanor.co.za", UserName = "unit379@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit380@miledownemanor.co.za", UserName = "unit380@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit381@miledownemanor.co.za", UserName = "unit381@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit382@miledownemanor.co.za", UserName = "unit382@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit383@miledownemanor.co.za", UserName = "unit383@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit384@miledownemanor.co.za", UserName = "unit384@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit385@miledownemanor.co.za", UserName = "unit385@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit386@miledownemanor.co.za", UserName = "unit386@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit387@miledownemanor.co.za", UserName = "unit387@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit388@miledownemanor.co.za", UserName = "unit388@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit389@miledownemanor.co.za", UserName = "unit389@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit390@miledownemanor.co.za", UserName = "unit390@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit391@miledownemanor.co.za", UserName = "unit391@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit392@miledownemanor.co.za", UserName = "unit392@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit393@miledownemanor.co.za", UserName = "unit393@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit394@miledownemanor.co.za", UserName = "unit394@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit395@miledownemanor.co.za", UserName = "unit395@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit396@miledownemanor.co.za", UserName = "unit396@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit397@miledownemanor.co.za", UserName = "unit397@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit398@miledownemanor.co.za", UserName = "unit398@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit399@miledownemanor.co.za", UserName = "unit399@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }
                AppUser = new ApplicationUser { Email = "unit400@miledownemanor.co.za", UserName = "unit400@miledownemanor.co.za", FirstName = "unit", LastName = "name", EmailConfirmed = true, IsActive = true, UserTypeId = 2 }; result = await _userManager.CreateAsync(AppUser, "password"); if (result.Succeeded) { await _userManager.AddToRoleAsync(AppUser, MDMRoles.Owner); _db.SystemUser.Add(new SystemUser { ApplicationUserId = AppUser.Id, TermAccepted = true, Notes = string.Empty, IsActive = true, CreatedOn = DateTime.Now, ModifiedOn = DateTime.Now }); _db.SaveChanges(); }



           
            return new JsonResult(new { success = false, message = "Error. Please check values entered" });
        }

        private void Rollback()
        {
            foreach (var entry in _db.ChangeTracker.Entries())
            {
                switch (entry.State)
                {
                    case EntityState.Modified:
                    case EntityState.Deleted:
                        entry.State = EntityState.Modified; //Revert changes made to deleted entity.
                        entry.State = EntityState.Unchanged;
                        break;
                    case EntityState.Added:
                        entry.State = EntityState.Detached;
                        break;
                }
            }
        }


  

     

        #endregion





        public async Task<IActionResult> OnPostRun()
        {

            await SetUpRoles();
            _logger.LogInformation("Roles Created");

            _logger.LogInformation("Client Organization Created");
            await CreateUsers();
            _logger.LogInformation("Users  Created");

            return Page();
        }

   


  

    
    }
}




